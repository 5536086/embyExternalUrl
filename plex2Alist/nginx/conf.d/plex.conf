# Load the njs script
js_path /etc/nginx/conf.d/;
js_import config from constant.js;
js_import plex2Pan from plex.js;
## The below will force all nginx traffic to SSL, make sure all other server blocks only listen on 443
# server {
#     listen 80 default_server;
#     server_name _;
#     return 301 https://$host$request_uri;
# }
js_shared_dict_zone zone=partInfoDict:1M timeout=1h evict;
## Start of actual server blocks
server {
    js_set $plex config.getPlexHost; #plex address
    # listen [::]:443 ssl http2;	## Listens on port 443 IPv6 with http2 and ssl enabled
    # listen 443 ssl http2;	## Listens on port 443 IPv4 with http2 and ssl enabled
    listen 80;
    server_name default;
    ## SSL SETTINGS ##
    # ssl_session_timeout 30m;
    # ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
	# ssl_certificate      ssl/pub.pem;  ## Location of your public PEM file.
	# ssl_certificate_key  ssl/pvt.pem;  ## Location of your private PEM file.
    # ssl_session_cache shared:SSL:10m;
    ## js_fetch SETTINGS
    resolver 8.8.8.8;
    js_fetch_verify off; # internal use only, off this fetch https://
    ## Compresses the content to the client, speeds up client browsing.
    gzip on;   
        gzip_disable "msie6";
        gzip_comp_level 6;
        gzip_min_length 1100;
        gzip_buffers 16 8k;
        gzip_proxied any;
        gzip_types
            text/plain
            text/css
            text/js
            text/xml
            text/javascript
            application/javascript
            application/x-javascript
            application/json
            application/xml
            application/rss+xml
            image/svg+xml;
    ## The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
    client_max_body_size 20M;
    # default is 4k
    subrequest_output_buffer_size 200k;
    # # Security / XSS Mitigation Headers
    # add_header X-Frame-Options "SAMEORIGIN";
    # add_header X-XSS-Protection "1; mode=block";
    # add_header X-Content-Type-Options "nosniff";
    # aliDrive direct stream need no-referrer
    add_header 'Referrer-Policy' 'no-referrer';
    
    # PlexMediaServer Start
    # Proxy sockets traffic for webClient
    location ~* /(websockets) {
        # Proxy plex Websockets traffic
        proxy_pass $plex;
        ## WEBSOCKET SETTINGS ## Used to pass two way real time info to and from emby and the client.
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_connect_timeout 1h;
        proxy_send_timeout 1h;
        proxy_read_timeout 1h;
        tcp_nodelay on;  ## Sends data as fast as it can not buffering large chunks, saves about 200ms per request.
    }

    # internal redirect
    location ~ ^(.*)/proxy(/.*)$ {
        internal; # internal use only
        gunzip on; # Jellyfin has gzip,subrequest need this,Emby no gzip but compatible
        client_body_in_file_only clean;
        rewrite ^(.*)/proxy(/.*)$ $1$2 break;
        proxy_pass $plex$request_uri; # Emby need $request_uri,Jellyfin not need but compatible
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        add_header X-Proxy-Success "yes";
    }
    # CachePartInfo
    location ~* /library/metadata/(\d+)$ {
        if ($http_accept ~* "application/json") {
            # Cache alist direct link
            add_header Cache-Control no-cache;
            add_header X-Proxy-Success "yes";
        	js_content plex2Pan.cachePartInfo;
        	break;
		}
		proxy_pass $plex; 
    }
    # Redirect the stream to njs
    location ~* /library/parts/(\d+)/(\d+)/file {
        # Cache alist direct link
        add_header    Cache-Control  max-age=3600;
        # proxy_pass $goalist;
        js_content plex2Pan.redirect2Pan;
    }
    location ~* /video/:/transcode/universal/start {
        # Cache alist direct link
        add_header    Cache-Control  max-age=3600;
        # proxy_pass $goalist;
        js_content plex2Pan.redirect2Pan;
    }
    # PlexMediaServer End

    location / {
        # Proxy main plex traffic
        proxy_pass $plex;
        # client_max_body_size 1000M;  ## Allows for mobile device large photo uploads.
        #proxy_set_header X-Real-IP $http_CF_Connecting_IP;  ## if you use cloudflare un-comment this line and comment out above line.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;

        ## ADDITIONAL SECURITY SETTINGS ##
        ## Optional settings to improve security ##
        ## add these after you have completed your testing and ssl setup ##
        ## NOTICE: For the Strict-Transport-Security setting below, I would recommend ramping up to this value ##
        ##         See https://hstspreload.org/ read through the "Deployment Recommendations" section first!   ##
        # add_header 'Referrer-Policy' 'origin-when-cross-origin';
        # add_header Strict-Transport-Security "max-age=15552000; preload" always;
        # add_header X-Frame-Options "SAMEORIGIN" always;
        # add_header X-Content-Type-Options "nosniff" always;
        # add_header X-XSS-Protection "1; mode=block" always;
    }
}
